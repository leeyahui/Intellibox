<!--

Copyright (c) 2010 Stephen P Ward and Joseph E Feser

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
-->
<UserControl Name="IntelliboxControl"
             x:Class="FeserWard.Controls.Intellibox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:FeserWard.Controls"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type Popup}">
                <Setter Property="Margin"
                        Value="1" />
                <Setter Property="AllowsTransparency"
                        Value="true" />
                <Setter Property="Placement"
                        Value="Bottom" />
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="LightSkyBlue"/>
                <Setter Property="BorderBrush" Value="#FF969696"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontFamily" Value="Microsoft YaHei"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="#FF969696">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ScrollViewer x:Name="PART_ContentHost"
                                          Grid.Column="0"
                                          VerticalAlignment="Stretch"
                                          Background="{x:Null}"
                                          BorderThickness="0"
                                          IsTabStop="False" />
                                    <ToggleButton Width="auto"  
                                                  Grid.Column="1"
                                                  Command="{Binding ShowAllResultsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Foreground" Value="Transparent"></Setter>
                                                <Setter Property="Template" >
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Grid RenderTransformOrigin="0.5,0.5">
                                                                <Border Width="15" Height="24" HorizontalAlignment="Right" BorderBrush="Blue" BorderThickness="0">
                                                                    <Border.Background>
                                                                        <SolidColorBrush Color="Transparent" />
                                                                    </Border.Background>
                                                                    <Path x:Name="path" Data="M0,0L3.5,4 7,0z" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                </Border>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Fill" TargetName="path" Value="#FF0FDA25"/>
                                                                </Trigger>
                                                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                                                <Trigger Property="IsEnabled" Value="false">
                                                                    <Setter Property="Fill" TargetName="path" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#1296db"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="BorderThickness" TargetName="border" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <local:WatermarkTextVisibilityConverter x:Key="watermarkVisibilityConverter" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/IntelliBox;component/Themes/ListView.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </UserControl.Resources>

    <Grid FocusManager.FocusedElement="{Binding ElementName=PART_EDITFIELD}">
        <TextBox Name="PART_EDITFIELD"
                 PreviewKeyDown="OnTextBoxPreviewKeyDown"
                 KeyUp="OnTextBoxKeyUp"
                 GotFocus="PART_EDITFIELD_GotFocus"
                 FontFamily="Microsoft YaHei"
                 FontSize="12"
                 TextChanged="OnTextBoxChanged">
        </TextBox>
        <TextBlock Margin="1"
                   Padding="4,2"
                   Focusable="False"
                   IsHitTestVisible="False"
                   Text="{Binding Path=WatermarkText, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                   Foreground="{Binding Path=WatermarkForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                   Background="{Binding Path=WatermarkBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                   FontSize="{Binding Path=FontSize, ElementName=PART_EDITFIELD}"
                   FontFamily="{Binding Path=FontFamily, ElementName=PART_EDITFIELD}"
                   FontStyle="{Binding Path=WatermarkFontStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                   FontWeight="{Binding Path=WatermarkFontWeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
            <TextBlock.Visibility>
                <MultiBinding Converter="{StaticResource watermarkVisibilityConverter}"
                              ConverterParameter="invert">
                    <Binding Path="Text"
                             ElementName="PART_EDITFIELD"/>
                    <Binding Path="IsKeyboardFocused"
                             ElementName="PART_EDITFIELD" />
                </MultiBinding>
            </TextBlock.Visibility>
        </TextBlock>

        <Popup Name="IntelliboxPopup1"
               StaysOpen="False"
               PlacementTarget="{Binding ElementName=PART_EDITFIELD}"
               IsOpen="{Binding Path=ShowResults, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
               MaxHeight="{Binding Path=ResultsMaxHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
               MaxWidth="{Binding Path=ResultsMaxWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
               MinHeight="{Binding Path=ResultsMinHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
               MinWidth="{Binding Path=ResultsMinWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
               Height="{Binding Path=ResultsHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
               Width="{Binding Path=ResultsWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
               PreviewMouseDown="Popup_PreviewMouseButton"
               PreviewMouseUp="Popup_PreviewMouseButton">
            <i:Interaction.Behaviors>
                <local:PopupTopmostBehavior Topmost="False" />
            </i:Interaction.Behaviors>
            <ListView Name="lstSearchItems"
                      AlternationCount="2"
                      VirtualizingStackPanel.IsVirtualizing="True"
                      ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=Items}"
                      PreviewKeyDown="lstSearchItems_PreviewKeyDown" MouseDoubleClick="OnListItemMouseDoubleClick" PreviewMouseLeftButtonUp="OnListItemMouseSingleClick">
            </ListView>
        </Popup>

        <Popup StaysOpen="False"
               Name="noResultsPopup"
               PlacementTarget="{Binding ElementName=PART_EDITFIELD}"
               PreviewKeyDown="lstSearchItems_PreviewKeyDown">
            <i:Interaction.Behaviors>
                <local:PopupTopmostBehavior Topmost="False" />
            </i:Interaction.Behaviors>
            <Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                    BorderThickness="1">
                <TextBlock Padding="16,4"
                           FontStyle="Italic"
                           Text="{Binding Path=NoResultsText, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                           Foreground="Black"
                           Background="White" />
            </Border>
        </Popup>

        <Popup StaysOpen="False"
               Name="waitingForResultsPopup"
               PlacementTarget="{Binding ElementName=PART_EDITFIELD}"
               PreviewKeyDown="lstSearchItems_PreviewKeyDown">
            <i:Interaction.Behaviors>
                <local:PopupTopmostBehavior Topmost="False" />
            </i:Interaction.Behaviors>
            <Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                    BorderThickness="1">
                <Grid Margin="6, 4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <ProgressBar Grid.Column="0"
                                 IsIndeterminate="True"
                                 MinWidth="125" />

                    <TextBlock Grid.Column="0" 
                               Padding="4,2,2,2"
                               VerticalAlignment="Center"
                               FontStyle="Italic"
                               Foreground="Black"
                               Text="Searching..." />

                    <Button Grid.Column="2"
                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                            Command="{Binding Path=CancelAllSearches, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                            ToolTip="Cancel all searches">
                        <Button.Content>
                            <TextBlock Text="X"
                                       Padding="2"
                                       FontWeight="DemiBold"
                                       Foreground="Red" />
                        </Button.Content>
                    </Button>
                </Grid>
            </Border>

        </Popup>

    </Grid>
</UserControl>
