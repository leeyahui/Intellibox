<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:FeserWard.Controls"
                    xmlns:convert="clr-namespace:FeserWard.Controls" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
    <Style TargetType="{x:Type local:Intellibox}">
        <Style.Resources>
            <Style TargetType="{x:Type Popup}">
                <Setter Property="Margin"
                        Value="1" />
                <Setter Property="AllowsTransparency"
                        Value="true" />
                <Setter Property="Placement"
                        Value="Bottom" />
            </Style>

            <convert:WatermarkTextVisibilityConverter x:Key="watermarkVisibilityConverter" />
            <Style x:Key="ListViewITemStyle" TargetType="{x:Type ListViewItem}">
                <Style.Setters>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="FontFamily" Value="Microsoft YaHei"/>
                </Style.Setters>
                <Style.Triggers>
                    <Trigger Property="Height" Value="Auto">
                        <Setter Property="MinHeight" Value="25" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="#48ADE2" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#FFFDD8CB"></Setter>
                        <Setter Property="Foreground" Value="#FFFF8251"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type ListView}">
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewITemStyle}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListView}">
                            <Border x:Name="Bd" Padding="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true" UseLayoutRounding="True">
                                <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Background" Value="#F7F7F7" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Grid SnapsToDevicePixels="True" >
                                <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition MaxHeight="7"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
                                            <ContentPresenter x:Name="HeaderContent" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Canvas>
                                    <Thumb x:Name="PART_HeaderGripper">
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Canvas.Right" Value="-9"/>
                                                <Setter Property="Width" Value="18"/>
                                                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <Setter Property="Padding" Value="0"/>
                                                <Setter Property="Background" Value="White"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Center" Width="1"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                </Canvas>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Height" Value="Auto">
                                    <Setter Property="MinHeight" Value="20"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="#FF969696"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="26" />
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <TextBox Name="PART_TextBox"
                                 FontFamily="{TemplateBinding FontFamily}"
                                 FontSize="12">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    <Setter Property="Background" Value="LightSkyBlue"/>
                                    <Setter Property="BorderBrush" Value="#FF969696"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Padding" Value="1"/>
                                    <Setter Property="AllowDrop" Value="true"/>
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="FontFamily" Value="Microsoft YaHei"/>
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TextBox">
                                                <Border x:Name="border" BorderThickness="1" BorderBrush="#FF969696">
                                                    <Grid Background="White">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ScrollViewer x:Name="PART_ContentHost"
                                                                      Grid.Column="0"
                                                                      VerticalAlignment="Stretch"
                                                                      Background="{x:Null}"
                                                                      BorderThickness="0"
                                                                      IsTabStop="False" />
                                                        <ToggleButton Width="auto"  
                                                                      Grid.Column="1"
                                                                      Command="{Binding ShowAllResultsCommand, RelativeSource={RelativeSource AncestorType=local:Intellibox}}">
                                                            <ToggleButton.Style>
                                                                <Style TargetType="ToggleButton">
                                                                    <Setter Property="Foreground" Value="Transparent"></Setter>
                                                                    <Setter Property="Template" >
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                <Grid RenderTransformOrigin="0.5,0.5">
                                                                                    <Border Width="15" Height="24" HorizontalAlignment="Right" BorderBrush="Blue" BorderThickness="0">
                                                                                        <Border.Background>
                                                                                            <SolidColorBrush Color="Transparent" />
                                                                                        </Border.Background>
                                                                                        <Path x:Name="path" Data="M0,0L3.5,4 7,0z" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                    </Border>
                                                                                </Grid>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Fill" TargetName="path" Value="#FF0FDA25"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsKeyboardFocused" Value="true"/>
                                                                                    <Trigger Property="IsEnabled" Value="false">
                                                                                        <Setter Property="Fill" TargetName="path" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </ToggleButton.Style>
                                                        </ToggleButton>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsFocused" Value="true">
                                                        <Setter Property="BorderBrush" TargetName="border" Value="#1296db"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Foreground" Value="Gray"/>
                                                    </Trigger>
                                                    <Trigger Property="IsReadOnly" Value="true">
                                                        <Setter Property="Foreground" Value="Gray"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <TextBlock Margin="1"
                                   Padding="4,2"
                                   Focusable="False"
                                   IsHitTestVisible="False"
                                   Text="{Binding WatermarkText,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   Foreground="{Binding WatermarkForeground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   Background="{Binding WatermarkBackground,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontStyle="{Binding WatermarkFontStyle,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   FontWeight="{Binding WatermarkFontWeight,RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <TextBlock.Visibility>
                                <MultiBinding Converter="{StaticResource watermarkVisibilityConverter}" ConverterParameter="invert">
                                    <Binding Path="Text" ElementName="PART_TextBox"/>
                                    <Binding Path="IsKeyboardFocused" ElementName="PART_TextBox" />
                                </MultiBinding>
                            </TextBlock.Visibility>
                        </TextBlock>
                        <Popup StaysOpen="False"
                               PlacementTarget="{Binding ElementName=PART_TextBox}"
                               IsOpen="{Binding Path=ShowResults, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                               MaxHeight="{Binding Path=ResultsMaxHeight, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                               MaxWidth="{Binding Path=ResultsMaxWidth, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                               MinHeight="{Binding Path=ResultsMinHeight, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                               MinWidth="{Binding Path=ResultsMinWidth, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                               Height="{Binding Path=ResultsHeight, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                               Width="{Binding Path=ResultsWidth, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <i:Interaction.Behaviors>
                                <convert:PopupTopmostBehavior Topmost="False" />
                            </i:Interaction.Behaviors>
                            <ListView Name="PART_ListView"
                                      AlternationCount="2"
                                      VirtualizingStackPanel.IsVirtualizing="True"
                                      ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Items}">
                            </ListView>
                        </Popup>

                        <Popup StaysOpen="False"
                               Name="PART_NOResultPop"
                               PlacementTarget="{Binding ElementName=PART_TextBox}">
                            <i:Interaction.Behaviors>
                                <convert:PopupTopmostBehavior Topmost="False" />
                            </i:Interaction.Behaviors>
                            <Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                    BorderThickness="1">
                                <TextBlock Padding="16,4"
                                           FontStyle="Italic"
                                           Text="{Binding Path=NoResultsText, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                           Foreground="Black"
                                           Background="White" />
                            </Border>
                        </Popup>
                        <Popup StaysOpen="False"
                               Name="PART_WaitPop"
                               PlacementTarget="{Binding ElementName=PART_TextBox}">
                            <i:Interaction.Behaviors>
                                <convert:PopupTopmostBehavior Topmost="False" />
                            </i:Interaction.Behaviors>
                            <Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                    BorderThickness="1">
                                <Grid Margin="6, 4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <ProgressBar Grid.Column="0"
                                                 IsIndeterminate="True"
                                                 MinWidth="125" />
                                    <TextBlock Grid.Column="0" 
                                               Padding="4,2,2,2"
                                               VerticalAlignment="Center"
                                               FontStyle="Italic"
                                               Foreground="Black"
                                               Text="Searching..." />

                                    <Button Grid.Column="2"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            Command="{Binding Path=CancelAllSearches, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            ToolTip="Cancel all searches">
                                        <Button.Content>
                                            <TextBlock Text="X"
                                                       Padding="2"
                                                       FontWeight="DemiBold"
                                                       Foreground="Red" />
                                        </Button.Content>
                                    </Button>
                                </Grid>
                            </Border>
                        </Popup>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=PART_TextBox, Path=IsVisible}" Value="True"/>
                                            <Condition Binding="{Binding AutoFocus,RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_TextBox}"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>